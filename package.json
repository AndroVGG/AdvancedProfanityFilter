{
  "name": "advancedprofanityfilter",
  "version": "2.0.2",
  "description": "A browser extension to filter profanity from webpages.",
  "main": "filter.js",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/richardfrost/AdvancedProfanityFilter.git"
  },
  "keywords": [
    "Profanity",
    "Filter"
  ],
  "author": "Richard Frost",
  "license": "SEE LICENSE IN LICENSE",
  "bugs": {
    "url": "https://github.com/richardfrost/AdvancedProfanityFilter/issues"
  },
  "homepage": "https://github.com/richardfrost/AdvancedProfanityFilter#readme",
  "scripts": {
    "build:test-sm": "babel src/script --out-dir built --extensions \".ts,.tsx\" --source-maps inline",
    "build:test": "babel src/script --out-dir ./test/built --extensions \".ts,.tsx,.js\"",
    "build": "npm run copy-static && npm run package:webpack",
    "clean": "node bin/clean.js",
    "copy-static": "node bin/copy-static.js",
    "lint": "eslint src/**/*.ts",
    "package:bookmarklet": "webpack --config bin/bookmark.webpack.config.js",
    "package:extension": "node bin/package-extension.js",
    "package:webpack": "webpack --config bin/webpack.config.js",
    "package": "npm run build && npm run package:extension",
    "test:cov": "nyc --reporter=lcov --reporter=text node_modules/mocha/bin/_mocha",
    "test:debug": "node --inspect-brk node_modules/mocha/bin/_mocha --reporter tap",
    "test:nocov": "node_modules/mocha/bin/_mocha",
    "test:types": "tsc --noEmit",
    "test": "npm run build:test && npm run test:types && npm run test:cov",
    "type-check:watch": "npm run type-check -- --watch",
    "update:help": "node bin/update-help.js",
    "verify": "npm run lint && npm run test",
    "watch": "node bin/watch.js"
  },
  "devDependencies": {
    "@babel/cli": "^7.2.0",
    "@babel/core": "^7.2.0",
    "@babel/plugin-proposal-class-properties": "^7.2.3",
    "@babel/plugin-proposal-object-rest-spread": "^7.2.0",
    "@babel/polyfill": "^7.2.5",
    "@babel/preset-env": "^7.2.3",
    "@babel/preset-typescript": "^7.1.0",
    "@babel/register": "^7.0.0",
    "@types/chrome": "latest",
    "@typescript-eslint/eslint-plugin": "^1.1.1",
    "@typescript-eslint/parser": "^1.1.1",
    "adm-zip": "^0.4.11",
    "babel-loader": "^8.0.4",
    "chai": "latest",
    "chokidar": "^2.0.4",
    "download": "^7.1.0",
    "eslint": "^5.2.0",
    "fs-extra": "^7.0.0",
    "marked": "^0.5.1",
    "mocha": "latest",
    "nyc": "latest",
    "typescript": "^3.2.2",
    "webpack": "^4.28.1",
    "webpack-cli": "^3.1.2"
  },
  "babel": {
    "presets": [
      "@babel/typescript",
      [
        "@babel/preset-env",
        {
          "modules": "commonjs",
          "targets": {
            "node": "current"
          }
        }
      ]
    ],
    "plugins": [
      "@babel/proposal-class-properties",
      "@babel/proposal-object-rest-spread"
    ]
  },
  "eslintConfig": {
    "extends": [
      "eslint:recommended",
      "plugin:@typescript-eslint/recommended"
    ],
    "parser": "@typescript-eslint/parser",
    "parserOptions": {
      "ecmaVersion": 6,
      "sourceType": "module",
      "ecmaFeatures": {}
    },
    "plugins": [
      "@typescript-eslint"
    ],
    "rules": {
      "indent": "off",
      "no-console": "warn",
      "no-control-regex": [
        "off"
      ],
      "no-undef": [
        "off"
      ],
      "no-unused-vars": [
        "off"
      ],
      "no-useless-escape": [
        "off"
      ],
      "quotes": [
        "error",
        "single"
      ],
      "semi": [
        "error",
        "always"
      ],
      "@typescript-eslint/class-name-casing": "error",
      "@typescript-eslint/explicit-function-return-type": "off",
      "@typescript-eslint/indent": [
        "error",
        2
      ],
      "@typescript-eslint/no-unused-vars": [
        "error",
        {
          "vars": "all",
          "args": "none"
        }
      ],
      "@typescript-eslint/no-use-before-define": "off",
      "@typescript-eslint/explicit-member-accessibility": "off",
      "@typescript-eslint/no-explicit-any": "off",
      "@typescript-eslint/type-annotation-spacing": "error"
    }
  },
  "nyc": {
    "cwd": "test/",
    "exclude": [
      "**/*.spec.js"
    ]
  }
}
